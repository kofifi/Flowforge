// <auto-generated />
using System;
using Flowforge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flowforge.Migrations
{
    [DbContext(typeof(FlowforgeDbContext))]
    [Migration("20250601121815_JsonConfiguirationBlockFix")]
    partial class JsonConfiguirationBlockFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Flowforge.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsonConfig")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SystemBlockId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SystemBlockId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Flowforge.Models.BlockConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceBlockId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetBlockId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceBlockId");

                    b.HasIndex("TargetBlockId");

                    b.ToTable("BlockConnections");
                });

            modelBuilder.Entity("Flowforge.Models.SystemBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Blok początkowy",
                            Type = "Start"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Blok końcowy",
                            Type = "End"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Blok dodawania",
                            Type = "Add"
                        });
                });

            modelBuilder.Entity("Flowforge.Models.Workflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workflows");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputData")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultData")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowExecutions");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowRevision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowRevisions");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowVariables");
                });

            modelBuilder.Entity("Flowforge.Models.Block", b =>
                {
                    b.HasOne("Flowforge.Models.SystemBlock", "SystemBlock")
                        .WithMany("Blocks")
                        .HasForeignKey("SystemBlockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flowforge.Models.Workflow", "Workflow")
                        .WithMany("Blocks")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemBlock");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Flowforge.Models.BlockConnection", b =>
                {
                    b.HasOne("Flowforge.Models.Block", "SourceBlock")
                        .WithMany("SourceConnections")
                        .HasForeignKey("SourceBlockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flowforge.Models.Block", "TargetBlock")
                        .WithMany("TargetConnections")
                        .HasForeignKey("TargetBlockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SourceBlock");

                    b.Navigation("TargetBlock");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowExecution", b =>
                {
                    b.HasOne("Flowforge.Models.Workflow", "Workflow")
                        .WithMany("WorkflowExecutions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowRevision", b =>
                {
                    b.HasOne("Flowforge.Models.Workflow", "Workflow")
                        .WithMany("WorkflowRevisions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Flowforge.Models.WorkflowVariable", b =>
                {
                    b.HasOne("Flowforge.Models.Workflow", "Workflow")
                        .WithMany("WorkflowVariables")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Flowforge.Models.Block", b =>
                {
                    b.Navigation("SourceConnections");

                    b.Navigation("TargetConnections");
                });

            modelBuilder.Entity("Flowforge.Models.SystemBlock", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("Flowforge.Models.Workflow", b =>
                {
                    b.Navigation("Blocks");

                    b.Navigation("WorkflowExecutions");

                    b.Navigation("WorkflowRevisions");

                    b.Navigation("WorkflowVariables");
                });
#pragma warning restore 612, 618
        }
    }
}
